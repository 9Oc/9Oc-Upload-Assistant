name: Create and publish Docker images

on:
  release:
    types:
      - published
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get lowercase repo name
        run: |
          REPO_NAME=${{ env.IMAGE_NAME }} 
          echo "LOWER_CASE_REPO_NAME=${REPO_NAME,,}" >> $GITHUB_ENV

      - name: Get version for tagging
        run: |
          if [ "${{ github.event_name }}" == "release" ]; then
            RELEASE_VERSION="${{ github.event.release.tag_name }}"
            echo "VERSION=${RELEASE_VERSION}" >> $GITHUB_ENV
          elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            BRANCH_NAME="${{ github.ref_name }}"
            echo "VERSION=${BRANCH_NAME}" >> $GITHUB_ENV
          fi

      - name: Generate Docker tags
        run: |
          BASE_TAG="${{ env.REGISTRY }}/${{ env.LOWER_CASE_REPO_NAME }}:${{ env.VERSION }}"
          
          if [ "${{ github.event_name }}" == "release" ]; then
            # For releases: add both version tag and latest
            TAGS="${BASE_TAG},${{ env.REGISTRY }}/${{ env.LOWER_CASE_REPO_NAME }}:latest"
            echo "DOCKER_TAGS=${TAGS}" >> $GITHUB_ENV
            echo "TAGGING_MODE=release (with latest)" >> $GITHUB_ENV
          else
            # For manual dispatch: only version tag (branch name)
            TAGS="${BASE_TAG}"
            echo "DOCKER_TAGS=${TAGS}" >> $GITHUB_ENV
            echo "TAGGING_MODE=manual dispatch (no latest)" >> $GITHUB_ENV
          fi

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=raw,value=latest,enable=${{ github.event_name == 'release' }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.DOCKER_TAGS }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Output build information
        run: |
          echo "✅ Docker images built and pushed successfully!"
          echo "🐋 Images built:"
          if [ "${{ github.event_name }}" == "release" ]; then
            echo "  - ${{ env.REGISTRY }}/${{ env.LOWER_CASE_REPO_NAME }}:${{ env.VERSION }}"
            echo "  - ${{ env.REGISTRY }}/${{ env.LOWER_CASE_REPO_NAME }}:latest"
            echo "📝 Triggered by release: ${{ github.event.release.tag_name }}"
            echo "🏷️ Tagged as 'latest' because this is a published release"
          else
            echo "  - ${{ env.REGISTRY }}/${{ env.LOWER_CASE_REPO_NAME }}:${{ env.VERSION }}"
            echo "📝 Triggered by manual workflow dispatch on branch: ${{ github.ref_name }}"
            echo "🏷️ No 'latest' tag for manual builds"
          fi
          echo "🔧 Tagging mode: ${{ env.TAGGING_MODE }}"
