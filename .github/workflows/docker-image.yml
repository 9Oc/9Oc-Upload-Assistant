name: Create and publish Docker images

on:
  release:
    types:
      - published
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get lowercase repo name
        run: |
          REPO_NAME=${{ env.IMAGE_NAME }} 
          echo "LOWER_CASE_REPO_NAME=${REPO_NAME,,}" >> $GITHUB_ENV

      - name: Get version for tagging
        run: |
          if [ "${{ github.event_name }}" == "release" ]; then
            RELEASE_VERSION="${{ github.event.release.tag_name }}"
            echo "VERSION=${RELEASE_VERSION}" >> $GITHUB_ENV
            echo "IS_TAG=true" >> $GITHUB_ENV
          elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            REF_NAME="${{ github.ref_name }}"
            echo "VERSION=${REF_NAME}" >> $GITHUB_ENV
            
            # Check if we're running from a tag (version tag pattern)
            if [[ "${REF_NAME}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+.*$ ]]; then
              echo "IS_TAG=true" >> $GITHUB_ENV
              echo "📋 Running from tag: ${REF_NAME}"
            else
              echo "IS_TAG=false" >> $GITHUB_ENV
              echo "📋 Running from branch: ${REF_NAME}"
            fi
          fi

      - name: Generate Docker tags
        run: |
          BASE_TAG="${{ env.REGISTRY }}/${{ env.LOWER_CASE_REPO_NAME }}:${{ env.VERSION }}"
          
          # Determine if we should add latest tag
          if [ "${{ github.event_name }}" == "release" ] || [ "${{ env.IS_TAG }}" == "true" ]; then
            # Add latest for published releases OR manual dispatch from tags
            TAGS="${BASE_TAG},${{ env.REGISTRY }}/${{ env.LOWER_CASE_REPO_NAME }}:latest"
            echo "WILL_TAG_LATEST=true" >> $GITHUB_ENV
            
            if [ "${{ github.event_name }}" == "release" ]; then
              TRIGGER_INFO="published release"
            else
              TRIGGER_INFO="manual dispatch from tag (auto-latest)"
            fi
          else
            # No latest for manual dispatch from branches
            TAGS="${BASE_TAG}"
            echo "WILL_TAG_LATEST=false" >> $GITHUB_ENV
            TRIGGER_INFO="manual dispatch from branch (no latest)"
          fi
          
          echo "DOCKER_TAGS=${TAGS}" >> $GITHUB_ENV
          echo "TRIGGER_INFO=${TRIGGER_INFO}" >> $GITHUB_ENV
          
          # Debug output
          echo "🐛 DEBUG: BASE_TAG=${BASE_TAG}"
          echo "🐛 DEBUG: TAGS=${TAGS}"
          echo "🐛 DEBUG: IS_TAG=${{ env.IS_TAG }}"
          echo "🐛 DEBUG: WILL_TAG_LATEST=${WILL_TAG_LATEST}"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.DOCKER_TAGS }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Output build information
        run: |
          echo "✅ Docker images built and pushed successfully!"
          echo "🐋 Images built:"
          echo "  - ${{ env.REGISTRY }}/${{ env.LOWER_CASE_REPO_NAME }}:${{ env.VERSION }}"
          
          if [ "${{ env.WILL_TAG_LATEST }}" == "true" ]; then
            echo "  - ${{ env.REGISTRY }}/${{ env.LOWER_CASE_REPO_NAME }}:latest"
          fi
          
          echo "📝 Trigger: ${{ env.TRIGGER_INFO }}"
          echo "🏷️ Version: ${{ env.VERSION }}"
          echo "🏷️ Is tag: ${{ env.IS_TAG }}"
          echo "🏷️ Tagged as latest: ${{ env.WILL_TAG_LATEST }}"
